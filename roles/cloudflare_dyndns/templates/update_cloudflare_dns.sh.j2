#!/bin/bash
## Account details
auth_key='{{ cloudflare_ddns_api_key }}'

## Record to update
zone_name='{{ cloudflare_ddns_zone_name }}'
record_name='{{ cloudflare_ddns_record_name }}'

## Binary locations
curl='/usr/bin/curl -s'
date='/bin/date'
dig='/usr/bin/dig'
jq='/usr/bin/jq'

## Get current date and time
date_time=$($date)

## Get current IP's
wanip4=$($dig @resolver1.opendns.com A myip.opendns.com +short -4)

## Get zone_identifier
zone_retun=$(
  $curl -X GET "https://api.cloudflare.com/client/v4/zones?name=$zone_name" \
    -H "Authorization: Bearer $auth_key" \
    -H "Content-Type: application/json" \

)
zone_identifier=$(echo $zone_retun | $jq '.result[0].id' --raw-output)

if [ -z "$zone_identifier" ]; then
    echo Could not determine ZoneID
    exit 1
fi

## Get current IPv4 (A) record
record_ip4=$(
  $curl -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?name=$record_name&type=A" \
    -H "Authorization: Bearer $auth_key" \
    -H "Content-Type: application/json" \
    | $jq '.result[0].content' --raw-output
)

# Start logging
echo ----------------------------------------
echo Date Time: $date_time
echo ----------------------------------------
echo Current IP4 Address: $wanip4
echo Current IP4 Record: $record_ip4
echo ----------------------------------------

## Check IPv4
if [ $wanip4 = $record_ip4 ]; then
  echo IPv4 Record matches. Update not needed.
else
  echo IPv4 Record does not match. Update needed.

  ## Get record_identifier for DNS record to update
  record_identifier=$(
    $curl -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?name=$record_name&type=A" \
      -H "Authorization: Bearer $auth_key" \
      -H "Content-Type: application/json" \
      | $jq '.result[0].id' --raw-output
  )

  ## Build valid JSON for update
  data_json="{\"type\":\"A\",\"name\":\"$record_name\",\"content\":\"$wanip4\"}"

  ## Update record
  update_result=$(
    $curl -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier" \
      -H "Authorization: Bearer $auth_key" \
      -H "Content-Type: application/json" \
      --data $data_json \
  )
  record_update=$(echo $update_result | $jq '.success' --raw-output)

  ## Log if success
  echo IPv4 Record updated: $record_update
  if [ $record_update = false ]; then
    echo API result: $update_result
  fi

fi

echo ----------------------------------------  && echo

exit 0
