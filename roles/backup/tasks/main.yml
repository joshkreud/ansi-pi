---
- name: Install Borgbackup
  become: yes
  ansible.builtin.package:
    name:
      - borgbackup
      - jq
    state: present

- name: ensure Pip Packages installed
  become: yes
  ansible.builtin.import_role:
    name: geerlingguy.pip
  vars:
    pip_install_packages:
      - name: borgmatic

- name: "Create Backup User"
  become: yes
  ansible.builtin.user:
    name: "borgbackup"
    generate_ssh_key: yes
    ssh_key_type: ed25519
    state: present
    groups: "{{ borg_user_groups }}"
  register: borgbackup_user

- name: Display Borg User
  ansible.builtin.debug:
    var: borgbackup_user["ssh_public_key"]

- name: Borgmatic Config Folder
  become: true
  ansible.builtin.file:
    path: "/etc/borgmatic"
    state: directory
    owner: "{{ borgbackup_user.name }}"
    group: "{{ borgbackup_user.name }}"
    mode: 0770

- name: Gather Borgbackup Public Keys
  when: borg_backup_authorize_hosts is defined
  ansible.builtin.set_fact:
    borg_backup_authorize_public_keys: "{{ hostvars[item].borgbackup_user.ssh_public_key }}"
  loop: "{{ borg_backup_authorize_hosts }}"

- name: Authorize Borg Hosts
  when: borg_backup_authorize_hosts is defined
  become: yes
  ansible.builtin.authorized_key:
    user: "{{ borgbackup_user.name }}"
    state: present
    key: "{{ borg_backup_authorize_public_keys | default([]) | join(\n) }}\n{{ borgbackup_user.ssh_public_key }}"
    exclusive: yes

- name: Template Borgmatic Config
  become: yes
  ansible.builtin.template:
    src: borgmatic-config.yml.j2
    dest: /etc/borgmatic/config.yaml
    owner: "{{ borgbackup_user.name }}"
    group: "{{ borgbackup_user.name }}"
    mode: 0660

- name: Set Backup Cron Job
  become: yes
  ansible.builtin.cron:
    name: "Borg Backup"
    minute: "47"
    hour: "4"
    job: "PATH=$PATH:/usr/bin:/usr/local/bin borgmatic --verbosity 1 --syslog-verbosity 1"
  when: backup_cron
